(testing /home/samc/sw-dev/22SwDev/Code/4/xstate)
(testing /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-0/0-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-0/0-out.json)
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((board
           .
           #hasheq((connectors
                    .
                    (("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "─" "─" "─" "─" "─" "─")))
                   (treasures
                    .
                    ((("alexandrite-pear-shape" "alexandrite")
                      ("alexandrite-pear-shape" "almandine-garnet")
                      ("alexandrite-pear-shape" "amethyst")
                      ("alexandrite-pear-shape" "ametrine")
                      ("alexandrite-pear-shape" "ammolite")
                      ("alexandrite-pear-shape" "apatite")
                      ("alexandrite-pear-shape" "aplite"))
                     (("alexandrite" "almandine-garnet")
                      ("alexandrite" "amethyst")
                      ("alexandrite" "ametrine")
                      ("alexandrite" "ammolite")
                      ("alexandrite" "apatite")
                      ("alexandrite" "aplite")
                      ("alexandrite" "apricot-square-radiant"))
                     (("almandine-garnet" "amethyst")
                      ("almandine-garnet" "ametrine")
                      ("almandine-garnet" "ammolite")
                      ("almandine-garnet" "apatite")
                      ("almandine-garnet" "aplite")
                      ("almandine-garnet" "apricot-square-radiant")
                      ("almandine-garnet" "aquamarine"))
                     (("amethyst" "ametrine")
                      ("amethyst" "ammolite")
                      ("amethyst" "apatite")
                      ("amethyst" "aplite")
                      ("amethyst" "apricot-square-radiant")
                      ("amethyst" "aquamarine")
                      ("amethyst" "australian-marquise"))
                     (("ametrine" "ammolite")
                      ("ametrine" "apatite")
                      ("ametrine" "aplite")
                      ("ametrine" "apricot-square-radiant")
                      ("ametrine" "aquamarine")
                      ("ametrine" "australian-marquise")
                      ("ametrine" "aventurine"))
                     (("ammolite" "apatite")
                      ("ammolite" "aplite")
                      ("ammolite" "apricot-square-radiant")
                      ("ammolite" "aquamarine")
                      ("ammolite" "australian-marquise")
                      ("ammolite" "aventurine")
                      ("ammolite" "azurite"))
                     (("apatite" "aplite")
                      ("apatite" "apricot-square-radiant")
                      ("apatite" "aquamarine")
                      ("apatite" "australian-marquise")
                      ("apatite" "aventurine")
                      ("apatite" "azurite")
                      ("apatite" "beryl"))))))
          (last . (0 "UP"))
          (plmt
           .
           (#hasheq((color . "red")
                    (current . #hasheq((column# . 0) (row# . 0)))
                    (home . #hasheq((column# . 1) (row# . 0))))))
          (spare
           .
           #hasheq((1-image . "yellow-heart")
                   (2-image . "tigers-eye")
                   (tilekey . "┬"))))
  0
  "UP"
  90)
(*** expected)
'((#hasheq((column# . 0) (row# . 0))
   #hasheq((column# . 0) (row# . 1))
   #hasheq((column# . 0) (row# . 2))
   #hasheq((column# . 0) (row# . 3))
   #hasheq((column# . 0) (row# . 4))
   #hasheq((column# . 0) (row# . 5))
   #hasheq((column# . 0) (row# . 6))
   #hasheq((column# . 1) (row# . 6))
   #hasheq((column# . 2) (row# . 6))
   #hasheq((column# . 3) (row# . 6))
   #hasheq((column# . 4) (row# . 6))
   #hasheq((column# . 5) (row# . 6))
   #hasheq((column# . 6) (row# . 6))))
(*** but received)
'(((plain fast with-newline plain-unicode)
   ((#hasheq((column# . 0) (row# . 0))
     #hasheq((column# . 0) (row# . 1))
     #hasheq((column# . 0) (row# . 2))
     #hasheq((column# . 0) (row# . 3))
     #hasheq((column# . 0) (row# . 4))
     #hasheq((column# . 0) (row# . 5))
     #hasheq((column# . 0) (row# . 6))))))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/samc/sw-dev/22SwDev/Code/4/xstate)
(testing /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-1/1-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-1/1-out.json)
distinct colors expected
xstate: invalid JSON:  JSON State (w/ players on fixed tiles): '#hasheq((board . #hasheq((connectors . (("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼") ("┼" "┼" "┼" "┼" "┼" "┼" "┼"))) ...
  context...:
   body of top-level
   /home/samc/sw-dev/22SwDev/Code/4/xstate:34:0: main
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((board
           .
           #hasheq((connectors
                    .
                    (("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")))
                   (treasures
                    .
                    ((("alexandrite-pear-shape" "alexandrite")
                      ("alexandrite-pear-shape" "almandine-garnet")
                      ("alexandrite-pear-shape" "amethyst")
                      ("alexandrite-pear-shape" "ametrine")
                      ("alexandrite-pear-shape" "ammolite")
                      ("alexandrite-pear-shape" "apatite")
                      ("alexandrite-pear-shape" "aplite"))
                     (("alexandrite" "almandine-garnet")
                      ("alexandrite" "amethyst")
                      ("alexandrite" "ametrine")
                      ("alexandrite" "ammolite")
                      ("alexandrite" "apatite")
                      ("alexandrite" "aplite")
                      ("alexandrite" "apricot-square-radiant"))
                     (("almandine-garnet" "amethyst")
                      ("almandine-garnet" "ametrine")
                      ("almandine-garnet" "ammolite")
                      ("almandine-garnet" "apatite")
                      ("almandine-garnet" "aplite")
                      ("almandine-garnet" "apricot-square-radiant")
                      ("almandine-garnet" "aquamarine"))
                     (("amethyst" "ametrine")
                      ("amethyst" "ammolite")
                      ("amethyst" "apatite")
                      ("amethyst" "aplite")
                      ("amethyst" "apricot-square-radiant")
                      ("amethyst" "aquamarine")
                      ("amethyst" "australian-marquise"))
                     (("ametrine" "ammolite")
                      ("ametrine" "apatite")
                      ("ametrine" "aplite")
                      ("ametrine" "apricot-square-radiant")
                      ("ametrine" "aquamarine")
                      ("ametrine" "australian-marquise")
                      ("ametrine" "aventurine"))
                     (("ammolite" "apatite")
                      ("ammolite" "aplite")
                      ("ammolite" "apricot-square-radiant")
                      ("ammolite" "aquamarine")
                      ("ammolite" "australian-marquise")
                      ("ammolite" "aventurine")
                      ("ammolite" "azurite"))
                     (("apatite" "aplite")
                      ("apatite" "apricot-square-radiant")
                      ("apatite" "aquamarine")
                      ("apatite" "australian-marquise")
                      ("apatite" "aventurine")
                      ("apatite" "azurite")
                      ("apatite" "beryl"))))))
          (last . (0 "UP"))
          (plmt
           .
           (#hasheq((color . "red")
                    (current . #hasheq((column# . 4) (row# . 4)))
                    (home . #hasheq((column# . 1) (row# . 0))))
            #hasheq((color . "red")
                    (current . #hasheq((column# . 0) (row# . 0)))
                    (home . #hasheq((column# . 1) (row# . 0))))))
          (spare
           .
           #hasheq((1-image . "yellow-heart")
                   (2-image . "tigers-eye")
                   (tilekey . "┬"))))
  0
  "UP"
  90)
(*** expected)
'((#hasheq((column# . 0) (row# . 0))
   #hasheq((column# . 1) (row# . 0))
   #hasheq((column# . 2) (row# . 0))
   #hasheq((column# . 3) (row# . 0))
   #hasheq((column# . 4) (row# . 0))
   #hasheq((column# . 5) (row# . 0))
   #hasheq((column# . 6) (row# . 0))
   #hasheq((column# . 0) (row# . 1))
   #hasheq((column# . 1) (row# . 1))
   #hasheq((column# . 2) (row# . 1))
   #hasheq((column# . 3) (row# . 1))
   #hasheq((column# . 4) (row# . 1))
   #hasheq((column# . 5) (row# . 1))
   #hasheq((column# . 6) (row# . 1))
   #hasheq((column# . 0) (row# . 2))
   #hasheq((column# . 1) (row# . 2))
   #hasheq((column# . 2) (row# . 2))
   #hasheq((column# . 3) (row# . 2))
   #hasheq((column# . 4) (row# . 2))
   #hasheq((column# . 5) (row# . 2))
   #hasheq((column# . 6) (row# . 2))
   #hasheq((column# . 0) (row# . 3))
   #hasheq((column# . 1) (row# . 3))
   #hasheq((column# . 2) (row# . 3))
   #hasheq((column# . 3) (row# . 3))
   #hasheq((column# . 4) (row# . 3))
   #hasheq((column# . 5) (row# . 3))
   #hasheq((column# . 6) (row# . 3))
   #hasheq((column# . 0) (row# . 4))
   #hasheq((column# . 1) (row# . 4))
   #hasheq((column# . 2) (row# . 4))
   #hasheq((column# . 3) (row# . 4))
   #hasheq((column# . 4) (row# . 4))
   #hasheq((column# . 5) (row# . 4))
   #hasheq((column# . 6) (row# . 4))
   #hasheq((column# . 0) (row# . 5))
   #hasheq((column# . 1) (row# . 5))
   #hasheq((column# . 2) (row# . 5))
   #hasheq((column# . 3) (row# . 5))
   #hasheq((column# . 4) (row# . 5))
   #hasheq((column# . 5) (row# . 5))
   #hasheq((column# . 6) (row# . 5))
   #hasheq((column# . 0) (row# . 6))
   #hasheq((column# . 1) (row# . 6))
   #hasheq((column# . 2) (row# . 6))
   #hasheq((column# . 3) (row# . 6))
   #hasheq((column# . 4) (row# . 6))
   #hasheq((column# . 5) (row# . 6))
   #hasheq((column# . 6) (row# . 6))))
(*** but received)
'(((plain fast with-newline plain-unicode) ()))


()
((passed 0) (total 1) (partial-score 0))
(testing /home/samc/sw-dev/22SwDev/Code/4/xstate)
(testing /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-2/2-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-2/2-out.json)
((/course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-2/2-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-2/2-out.json))
((passed 1) (total 1) (partial-score 1))
(testing /home/samc/sw-dev/22SwDev/Code/4/xstate)
(testing /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-3/3-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-3/3-out.json)
((/course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-3/3-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-3/3-out.json))
((passed 1) (total 1) (partial-score 1))
(testing /home/samc/sw-dev/22SwDev/Code/4/xstate)
(testing /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-4/4-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-4/4-out.json)
((/course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-4/4-in.json /course/cs4500f22/ta/github/johnkuang-ruaruarua/4/Tests-4/4-out.json))
((passed 1) (total 1) (partial-score 1))
